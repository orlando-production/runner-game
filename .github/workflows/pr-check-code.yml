name: Code checks
on:
  [pull_request]
jobs:
  build_check:
    runs-on: ubuntu-latest
    container:
      image: node:16.13.0-alpine
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Build check
        run: npm run build

  codestyle:
    needs: build_check
    runs-on: ubuntu-latest
    container:
      image: node:16.13.0-alpine
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Lint source code with Eslint
        run: npm run linter

  types:
    needs: build_check
    runs-on: ubuntu-latest
    container:
      image: node:16.13.0-alpine
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Check types
        run: npm run check:ts

  tests:
    needs: build_check
    runs-on: ubuntu-latest
    container:
      image: node:16.13.0-alpine
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Run tests
        run: npm run test

  deploy:
    name: Deploy project to Yandex Cloud
    needs: ['tests']
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_orlando
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_orlando
          echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Stop the docker
        run: ssh staging 'cd runner-game'
