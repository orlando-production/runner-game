name: Code checks
on:
  [pull_request]
jobs:
  build_check:
    runs-on: ubuntu-latest
    container:
      image: node:16.13.0-alpine
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Build check
        run: npm run build

  codestyle:
    needs: build_check
    runs-on: ubuntu-latest
    container:
      image: node:16.13.0-alpine
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Lint source code with Eslint
        run: npm run linter

  types:
    needs: build_check
    runs-on: ubuntu-latest
    container:
      image: node:16.13.0-alpine
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Check types
        run: npm run check:ts

  tests:
    needs: build_check
    runs-on: ubuntu-latest
    container:
      image: node:16.13.0-alpine
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Run tests
        run: npm run test

  deploy:
    name: Deploy project to Yandex Cloud
    needs: ['tests']
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName 51.250.31.82
            User orlando
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.DANY_SSH }}

      - name: Connect to the server
        run: ssh staging
      - name: Change directory
        run: cd runner-game
      - name: Setup depencies
        run: sudo npm install
      - name: Build
        run: sudo npm run build
      - name: Reload server
        with:
          script: /
            export PATH=$PATH:/usr/local/bin
            pm2 restart ecosystem.config.js
